{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/Josip/Documents/dnd-notes-app/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  console.error('Missing Supabase environment variables')\n  console.log('URL:', supabaseUrl)\n  console.log('Key:', supabaseAnonKey ? 'Present' : 'Missing')\n}\n\nexport const supabase = createClient(supabaseUrl!, supabaseAnonKey!)"],"names":[],"mappings":";;;AAEoB;AAFpB;;AAEA,MAAM;AACN,MAAM;AAEN,uCAAsC;;AAItC;AAEO,MAAM,WAAW,CAAA,GAAA,0LAAA,CAAA,eAAY,AAAD,EAAE,aAAc","debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///Users/Josip/Documents/dnd-notes-app/lib/notes.ts"],"sourcesContent":["import { supabase } from './supabase'\nimport { Note } from './database.types'\n\nexport const createNote = async (noteData: {\n  title: string\n  content: string\n  note_type: Note['note_type']\n  tags?: string[]\n}) => {\n  const { data: { user } } = await supabase.auth.getUser()\n  \n  if (!user) throw new Error('User not authenticated')\n\n  const { data: note, error: noteError } = await supabase\n    .from('notes')\n    .insert([\n      {\n        title: noteData.title,\n        content: noteData.content,\n        note_type: noteData.note_type,\n        tags: noteData.tags || [],\n        created_by: user.id\n      }\n    ])\n    .select()\n    .single()\n\n  if (noteError) {\n    console.error('Note creation error:', noteError)\n    throw noteError\n  }\n\n  const { error: permissionError } = await supabase\n    .from('note_permissions')\n    .insert([\n      {\n        note_id: note.id,\n        user_id: user.id,\n        role: 'owner'\n      }\n    ])\n\n  if (permissionError) {\n    console.error('Permission creation error:', permissionError)\n  }\n\n  return note\n}\n\nexport const getNotes = async () => {\n  const { data, error } = await supabase\n    .from('notes')\n    .select('*')\n    .order('updated_at', { ascending: false })\n\n  if (error) {\n    console.error('Get notes error:', error)\n    throw error\n  }\n  return data || []\n}\n\nexport const getNote = async (id: string) => {\n  const { data, error } = await supabase\n    .from('notes')\n    .select(`\n      *,\n      references_from:note_references!source_note_id (\n        target_note_id,\n        target_note:notes!target_note_id (\n          id,\n          title,\n          note_type\n        )\n      ),\n      references_to:note_references!target_note_id (\n        source_note_id,\n        source_note:notes!source_note_id (\n          id,\n          title,\n          note_type\n        )\n      )\n    `)\n    .eq('id', id)\n    .single()\n\n  if (error) throw error\n  return data\n}\n\nexport const updateNote = async (id: string, updates: Partial<Note>) => {\n  const { data, error } = await supabase\n    .from('notes')\n    .update({\n      title: updates.title,\n      content: updates.content,\n      note_type: updates.note_type,\n      tags: updates.tags,\n      updated_at: new Date().toISOString()\n    })\n    .eq('id', id)\n    .select()\n    .single()\n\n  if (error) {\n    console.error('Update note error:', error)\n    throw error\n  }\n  return data\n}\n\nexport const deleteNote = async (id: string) => {\n  const { error } = await supabase\n    .from('notes')\n    .delete()\n    .eq('id', id)\n\n  if (error) {\n    console.error('Delete note error:', error)\n    throw error\n  }\n}\n\n// New reference functions\nexport const addNoteReference = async (sourceNoteId: string, targetNoteId: string) => {\n  const { data, error } = await supabase\n    .from('note_references')\n    .insert([\n      {\n        source_note_id: sourceNoteId,\n        target_note_id: targetNoteId\n      }\n    ])\n    .select()\n    .single()\n\n  if (error) {\n    console.error('Add reference error:', error)\n    throw error\n  }\n  return data\n}\n\nexport const removeNoteReference = async (sourceNoteId: string, targetNoteId: string) => {\n  const { error } = await supabase\n    .from('note_references')\n    .delete()\n    .eq('source_note_id', sourceNoteId)\n    .eq('target_note_id', targetNoteId)\n\n  if (error) {\n    console.error('Remove reference error:', error)\n    throw error\n  }\n}\n\nexport const getNotesForReference = async (excludeId?: string) => {\n  let query = supabase\n    .from('notes')\n    .select('id, title, note_type')\n    .order('title')\n\n  if (excludeId) {\n    query = query.neq('id', excludeId)\n  }\n\n  const { data, error } = await query\n\n  if (error) {\n    console.error('Get notes for reference error:', error)\n    throw error\n  }\n  return data || []\n}"],"names":[],"mappings":";;;;;;;;;;AAAA;;AAGO,MAAM,aAAa,OAAO;IAM/B,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,GAAG,MAAM,kHAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,OAAO;IAEtD,IAAI,CAAC,MAAM,MAAM,IAAI,MAAM;IAE3B,MAAM,EAAE,MAAM,IAAI,EAAE,OAAO,SAAS,EAAE,GAAG,MAAM,kHAAA,CAAA,WAAQ,CACpD,IAAI,CAAC,SACL,MAAM,CAAC;QACN;YACE,OAAO,SAAS,KAAK;YACrB,SAAS,SAAS,OAAO;YACzB,WAAW,SAAS,SAAS;YAC7B,MAAM,SAAS,IAAI,IAAI,EAAE;YACzB,YAAY,KAAK,EAAE;QACrB;KACD,EACA,MAAM,GACN,MAAM;IAET,IAAI,WAAW;QACb,QAAQ,KAAK,CAAC,wBAAwB;QACtC,MAAM;IACR;IAEA,MAAM,EAAE,OAAO,eAAe,EAAE,GAAG,MAAM,kHAAA,CAAA,WAAQ,CAC9C,IAAI,CAAC,oBACL,MAAM,CAAC;QACN;YACE,SAAS,KAAK,EAAE;YAChB,SAAS,KAAK,EAAE;YAChB,MAAM;QACR;KACD;IAEH,IAAI,iBAAiB;QACnB,QAAQ,KAAK,CAAC,8BAA8B;IAC9C;IAEA,OAAO;AACT;AAEO,MAAM,WAAW;IACtB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,kHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,SACL,MAAM,CAAC,KACP,KAAK,CAAC,cAAc;QAAE,WAAW;IAAM;IAE1C,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,oBAAoB;QAClC,MAAM;IACR;IACA,OAAO,QAAQ,EAAE;AACnB;AAEO,MAAM,UAAU,OAAO;IAC5B,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,kHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,SACL,MAAM,CAAC,CAAC;;;;;;;;;;;;;;;;;;IAkBT,CAAC,EACA,EAAE,CAAC,MAAM,IACT,MAAM;IAET,IAAI,OAAO,MAAM;IACjB,OAAO;AACT;AAEO,MAAM,aAAa,OAAO,IAAY;IAC3C,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,kHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,SACL,MAAM,CAAC;QACN,OAAO,QAAQ,KAAK;QACpB,SAAS,QAAQ,OAAO;QACxB,WAAW,QAAQ,SAAS;QAC5B,MAAM,QAAQ,IAAI;QAClB,YAAY,IAAI,OAAO,WAAW;IACpC,GACC,EAAE,CAAC,MAAM,IACT,MAAM,GACN,MAAM;IAET,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,sBAAsB;QACpC,MAAM;IACR;IACA,OAAO;AACT;AAEO,MAAM,aAAa,OAAO;IAC/B,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,kHAAA,CAAA,WAAQ,CAC7B,IAAI,CAAC,SACL,MAAM,GACN,EAAE,CAAC,MAAM;IAEZ,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,sBAAsB;QACpC,MAAM;IACR;AACF;AAGO,MAAM,mBAAmB,OAAO,cAAsB;IAC3D,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,kHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,mBACL,MAAM,CAAC;QACN;YACE,gBAAgB;YAChB,gBAAgB;QAClB;KACD,EACA,MAAM,GACN,MAAM;IAET,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,wBAAwB;QACtC,MAAM;IACR;IACA,OAAO;AACT;AAEO,MAAM,sBAAsB,OAAO,cAAsB;IAC9D,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,kHAAA,CAAA,WAAQ,CAC7B,IAAI,CAAC,mBACL,MAAM,GACN,EAAE,CAAC,kBAAkB,cACrB,EAAE,CAAC,kBAAkB;IAExB,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,2BAA2B;QACzC,MAAM;IACR;AACF;AAEO,MAAM,uBAAuB,OAAO;IACzC,IAAI,QAAQ,kHAAA,CAAA,WAAQ,CACjB,IAAI,CAAC,SACL,MAAM,CAAC,wBACP,KAAK,CAAC;IAET,IAAI,WAAW;QACb,QAAQ,MAAM,GAAG,CAAC,MAAM;IAC1B;IAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM;IAE9B,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,kCAAkC;QAChD,MAAM;IACR;IACA,OAAO,QAAQ,EAAE;AACnB","debugId":null}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":["file:///Users/Josip/Documents/dnd-notes-app/lib/search.ts"],"sourcesContent":["import { Note } from './database.types'\n\nexport interface SearchFilters {\n  query: string\n  type: Note['note_type'] | 'all'\n  tag: string\n}\n\nexport const searchAndFilterNotes = (\n  notes: Note[],\n  filters: SearchFilters\n): Note[] => {\n  let filteredNotes = [...notes]\n\n  // Text search\n  if (filters.query.trim() !== '') {\n    const query = filters.query.toLowerCase().trim()\n    filteredNotes = filteredNotes.filter(note =>\n      note.title.toLowerCase().includes(query) ||\n      (note.content && note.content.toLowerCase().includes(query)) ||\n      (note.tags && note.tags.some(tag => tag.toLowerCase().includes(query)))\n    )\n  }\n\n  // Type filter\n  if (filters.type !== 'all') {\n    filteredNotes = filteredNotes.filter(note => note.note_type === filters.type)\n  }\n\n  // Tag filter\n  if (filters.tag !== 'all') {\n    filteredNotes = filteredNotes.filter(note =>\n      note.tags && note.tags.includes(filters.tag)\n    )\n  }\n\n  return filteredNotes\n}\n\nexport const getAvailableTags = (notes: Note[]): string[] => {\n  const tagSet = new Set<string>()\n  \n  notes.forEach(note => {\n    if (note.tags) {\n      note.tags.forEach(tag => tagSet.add(tag))\n    }\n  })\n\n  return Array.from(tagSet).sort()\n}\n\nexport const getNoteCounts = (notes: Note[]) => {\n  const counts = {\n    all: notes.length,\n    general: 0,\n    npc: 0,\n    location: 0,\n    quest: 0,\n    session: 0,\n    item: 0,\n    lore: 0\n  }\n\n  notes.forEach(note => {\n    counts[note.note_type]++\n  })\n\n  return counts\n}"],"names":[],"mappings":";;;;;AAQO,MAAM,uBAAuB,CAClC,OACA;IAEA,IAAI,gBAAgB;WAAI;KAAM;IAE9B,cAAc;IACd,IAAI,QAAQ,KAAK,CAAC,IAAI,OAAO,IAAI;QAC/B,MAAM,QAAQ,QAAQ,KAAK,CAAC,WAAW,GAAG,IAAI;QAC9C,gBAAgB,cAAc,MAAM,CAAC,CAAA,OACnC,KAAK,KAAK,CAAC,WAAW,GAAG,QAAQ,CAAC,UACjC,KAAK,OAAO,IAAI,KAAK,OAAO,CAAC,WAAW,GAAG,QAAQ,CAAC,UACpD,KAAK,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,CAAA,MAAO,IAAI,WAAW,GAAG,QAAQ,CAAC;IAEnE;IAEA,cAAc;IACd,IAAI,QAAQ,IAAI,KAAK,OAAO;QAC1B,gBAAgB,cAAc,MAAM,CAAC,CAAA,OAAQ,KAAK,SAAS,KAAK,QAAQ,IAAI;IAC9E;IAEA,aAAa;IACb,IAAI,QAAQ,GAAG,KAAK,OAAO;QACzB,gBAAgB,cAAc,MAAM,CAAC,CAAA,OACnC,KAAK,IAAI,IAAI,KAAK,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG;IAE/C;IAEA,OAAO;AACT;AAEO,MAAM,mBAAmB,CAAC;IAC/B,MAAM,SAAS,IAAI;IAEnB,MAAM,OAAO,CAAC,CAAA;QACZ,IAAI,KAAK,IAAI,EAAE;YACb,KAAK,IAAI,CAAC,OAAO,CAAC,CAAA,MAAO,OAAO,GAAG,CAAC;QACtC;IACF;IAEA,OAAO,MAAM,IAAI,CAAC,QAAQ,IAAI;AAChC;AAEO,MAAM,gBAAgB,CAAC;IAC5B,MAAM,SAAS;QACb,KAAK,MAAM,MAAM;QACjB,SAAS;QACT,KAAK;QACL,UAAU;QACV,OAAO;QACP,SAAS;QACT,MAAM;QACN,MAAM;IACR;IAEA,MAAM,OAAO,CAAC,CAAA;QACZ,MAAM,CAAC,KAAK,SAAS,CAAC;IACxB;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///Users/Josip/Documents/dnd-notes-app/components/auth/LoginForm.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { supabase } from '@/lib/supabase'\n\nexport default function LoginForm() {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [isSignUp, setIsSignUp] = useState(false)\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setIsLoading(true)\n\n    try {\n      if (isSignUp) {\n        const { error } = await supabase.auth.signUp({\n          email,\n          password,\n        })\n        if (error) throw error\n        alert('Check your email for confirmation!')\n      } else {\n        const { error } = await supabase.auth.signInWithPassword({\n          email,\n          password,\n        })\n        if (error) throw error\n      }\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        alert(error.message)\n      } else {\n        alert('An unexpected error occurred.')\n        console.error('Unexpected error:', error);\n      }\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"max-w-md mx-auto mt-8 p-6 bg-white rounded-lg shadow-md\">\n      <h2 className=\"text-2xl font-bold mb-6 text-center\">\n        {isSignUp ? 'Sign Up' : 'Login'} to D&D Notes\n      </h2>\n      \n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <div>\n          <label className=\"block text-sm font-medium mb-2\">Email</label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            className=\"w-full p-3 border rounded-md\"\n            required\n          />\n        </div>\n        \n        <div>\n          <label className=\"block text-sm font-medium mb-2\">Password</label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"w-full p-3 border rounded-md\"\n            required\n          />\n        </div>\n        \n        <button\n          type=\"submit\"\n          disabled={isLoading}\n          className=\"w-full bg-blue-600 text-white p-3 rounded-md hover:bg-blue-700 disabled:opacity-50\"\n        >\n          {isLoading ? 'Loading...' : (isSignUp ? 'Sign Up' : 'Login')}\n        </button>\n      </form>\n      \n      <p className=\"mt-4 text-center\">\n        {isSignUp ? 'Already have an account?' : \"Don't have an account?\"}{' '}\n        <button\n          onClick={() => setIsSignUp(!isSignUp)}\n          className=\"text-blue-600 hover:underline\"\n        >\n          {isSignUp ? 'Login' : 'Sign Up'}\n        </button>\n      </p>\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKe,SAAS;;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,aAAa;QAEb,IAAI;YACF,IAAI,UAAU;gBACZ,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,kHAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;oBAC3C;oBACA;gBACF;gBACA,IAAI,OAAO,MAAM;gBACjB,MAAM;YACR,OAAO;gBACL,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,kHAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC;oBACvD;oBACA;gBACF;gBACA,IAAI,OAAO,MAAM;YACnB;QACF,EAAE,OAAO,OAAgB;YACvB,IAAI,iBAAiB,OAAO;gBAC1B,MAAM,MAAM,OAAO;YACrB,OAAO;gBACL,MAAM;gBACN,QAAQ,KAAK,CAAC,qBAAqB;YACrC;QACF,SAAU;YACR,aAAa;QACf;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;;oBACX,WAAW,YAAY;oBAAQ;;;;;;;0BAGlC,6LAAC;gBAAK,UAAU;gBAAc,WAAU;;kCACtC,6LAAC;;0CACC,6LAAC;gCAAM,WAAU;0CAAiC;;;;;;0CAClD,6LAAC;gCACC,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;gCACxC,WAAU;gCACV,QAAQ;;;;;;;;;;;;kCAIZ,6LAAC;;0CACC,6LAAC;gCAAM,WAAU;0CAAiC;;;;;;0CAClD,6LAAC;gCACC,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;gCAC3C,WAAU;gCACV,QAAQ;;;;;;;;;;;;kCAIZ,6LAAC;wBACC,MAAK;wBACL,UAAU;wBACV,WAAU;kCAET,YAAY,eAAgB,WAAW,YAAY;;;;;;;;;;;;0BAIxD,6LAAC;gBAAE,WAAU;;oBACV,WAAW,6BAA6B;oBAA0B;kCACnE,6LAAC;wBACC,SAAS,IAAM,YAAY,CAAC;wBAC5B,WAAU;kCAET,WAAW,UAAU;;;;;;;;;;;;;;;;;;AAKhC;GAtFwB;KAAA","debugId":null}},
    {"offset": {"line": 395, "column": 0}, "map": {"version":3,"sources":["file:///Users/Josip/Documents/dnd-notes-app/components/notes/ReferenceModal.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Note } from '@/lib/database.types'\nimport { getNotesForReference } from '@/lib/notes'\n\ninterface ReferenceModalProps {\n  isOpen: boolean\n  currentNoteId: string\n  existingReferences: string[]\n  onAddReference: (targetNoteId: string) => void\n  onClose: () => void\n}\n\nconst NOTE_TYPE_ICONS = {\n  general: '📝',\n  npc: '🧙‍♂️',\n  location: '🏰',\n  quest: '⚔️',\n  session: '🎲',\n  item: '⚡',\n  lore: '📚'\n}\n\nexport default function ReferenceModal({\n  isOpen,\n  currentNoteId,\n  existingReferences,\n  onAddReference,\n  onClose\n}: ReferenceModalProps) {\n  const [availableNotes, setAvailableNotes] = useState<Pick<Note, 'id' | 'title' | 'note_type'>[]>([])\n  const [searchQuery, setSearchQuery] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if (isOpen) {\n      loadAvailableNotes()\n    }\n  }, [isOpen, currentNoteId])\n\n  const loadAvailableNotes = async () => {\n    setLoading(true)\n    try {\n      const notes = await getNotesForReference(currentNoteId)\n      setAvailableNotes(notes)\n    } catch (error) {\n      console.error('Error loading notes for reference:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const filteredNotes = availableNotes.filter(note => {\n    // Exclude already referenced notes\n    if (existingReferences.includes(note.id)) return false\n    \n    // Filter by search query\n    if (searchQuery.trim() !== '') {\n      return note.title.toLowerCase().includes(searchQuery.toLowerCase())\n    }\n    \n    return true\n  })\n\n  if (!isOpen) return null\n\n  return (\n    <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-slate-800 rounded-xl border border-slate-700 p-6 max-w-2xl w-full max-h-[80vh] overflow-y-auto\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <h3 className=\"text-xl font-bold text-white\">Add Reference</h3>\n          <button \n            onClick={onClose}\n            className=\"text-slate-400 hover:text-white transition-colors\"\n          >\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        {/* Search */}\n        <div className=\"relative mb-6\">\n          <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n            <svg className=\"h-5 w-5 text-slate-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n            </svg>\n          </div>\n          <input\n            type=\"text\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            placeholder=\"Search notes to reference...\"\n            className=\"w-full pl-10 pr-4 py-3 bg-slate-700/50 border border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-white placeholder-slate-400\"\n          />\n        </div>\n\n        {/* Available Notes */}\n        {loading ? (\n          <div className=\"text-center py-8 text-slate-400\">Loading notes...</div>\n        ) : filteredNotes.length === 0 ? (\n          <div className=\"text-center py-8 text-slate-400\">\n            {searchQuery ? 'No notes found matching your search.' : 'No more notes available to reference.'}\n          </div>\n        ) : (\n          <div className=\"space-y-2\">\n            {filteredNotes.map((note) => (\n              <button\n                key={note.id}\n                onClick={() => {\n                  onAddReference(note.id)\n                  onClose()\n                }}\n                className=\"w-full p-4 text-left border border-slate-600 rounded-lg hover:border-slate-500 hover:bg-slate-700/50 transition-all duration-200 group\"\n              >\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-2xl\">\n                    {NOTE_TYPE_ICONS[note.note_type]}\n                  </span>\n                  <div className=\"flex-1\">\n                    <h4 className=\"font-medium text-white group-hover:text-blue-400 transition-colors\">\n                      {note.title}\n                    </h4>\n                    <p className=\"text-sm text-slate-400 capitalize\">\n                      {note.note_type}\n                    </p>\n                  </div>\n                  <svg className=\"w-5 h-5 text-slate-400 group-hover:text-blue-400 transition-colors\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n                  </svg>\n                </div>\n              </button>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 667, "column": 0}, "map": {"version":3,"sources":["file:///Users/Josip/Documents/dnd-notes-app/components/notes/NoteForm.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Note, NoteWithReferences } from '@/lib/database.types'\nimport ReferenceModal from './ReferenceModal'\n\ninterface NoteFormProps {\n  onSubmit: (noteData: {\n    title: string\n    content: string\n    note_type: Note['note_type']\n    tags: string[]\n    references?: string[]\n  }) => Promise<void>\n  onCancel: () => void\n  initialData?: Partial<NoteWithReferences>\n  isLoading?: boolean\n}\n\nconst NOTE_TYPES = [\n  { value: 'general', label: '📝 General', description: 'General notes and ideas' },\n  { value: 'npc', label: '🧙‍♂️ NPC', description: 'Non-player characters' },\n  { value: 'location', label: '🏰 Location', description: 'Places and areas' },\n  { value: 'quest', label: '⚔️ Quest', description: 'Adventures and missions' },\n  { value: 'session', label: '🎲 Session', description: 'Game session notes' },\n  { value: 'item', label: '⚡ Item', description: 'Magical items and equipment' },\n  { value: 'lore', label: '📚 Lore', description: 'World building and history' }\n] as const\n\nconst NOTE_TYPE_ICONS = {\n  general: '📝',\n  npc: '🧙‍♂️',\n  location: '🏰',\n  quest: '⚔️',\n  session: '🎲',\n  item: '⚡',\n  lore: '📚'\n}\n\nexport default function NoteForm({ onSubmit, onCancel, initialData, isLoading }: NoteFormProps) {\n  const [title, setTitle] = useState(initialData?.title || '')\n  const [content, setContent] = useState(initialData?.content || '')\n  const [noteType, setNoteType] = useState<Note['note_type']>(initialData?.note_type || 'general')\n  const [tagsInput, setTagsInput] = useState(initialData?.tags?.join(', ') || '')\n  const [showReferenceModal, setShowReferenceModal] = useState(false)\n  \n  // Track references for new notes or editing\n  const [pendingReferences, setPendingReferences] = useState<string[]>(\n    initialData?.references_from?.map(ref => ref.target_note_id) || []\n  )\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    const tags = tagsInput\n      .split(',')\n      .map(tag => tag.trim())\n      .filter(tag => tag.length > 0)\n\n    await onSubmit({\n      title,\n      content,\n      note_type: noteType,\n      tags,\n      references: pendingReferences\n    })\n  }\n\n  const handleAddReference = (targetNoteId: string) => {\n    if (!pendingReferences.includes(targetNoteId)) {\n      setPendingReferences([...pendingReferences, targetNoteId])\n    }\n  }\n\n  const handleRemoveReference = (targetNoteId: string) => {\n    setPendingReferences(pendingReferences.filter(id => id !== targetNoteId))\n  }\n\n  return (\n    <div className=\"bg-slate-800/90 backdrop-blur-sm rounded-xl shadow-2xl p-8 border border-slate-700\">\n      <h2 className=\"text-2xl font-bold mb-8 text-white\">\n        {initialData ? 'Edit Note' : 'Create New Note'}\n      </h2>\n\n      <form onSubmit={handleSubmit} className=\"space-y-8\">\n        {/* Title */}\n        <div>\n          <label className=\"block text-sm font-medium mb-3 text-slate-300\">Title</label>\n          <input\n            type=\"text\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            className=\"w-full p-4 bg-slate-700/50 border border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-white placeholder-slate-400 transition-all duration-200\"\n            placeholder=\"Enter note title...\"\n            required\n          />\n        </div>\n\n        {/* Note Type */}\n        <div>\n          <label className=\"block text-sm font-medium mb-3 text-slate-300\">Note Type</label>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3\">\n            {NOTE_TYPES.map((type) => (\n              <button\n                key={type.value}\n                type=\"button\"\n                onClick={() => setNoteType(type.value)}\n                className={`p-4 text-left border rounded-lg transition-all duration-200 ${\n                  noteType === type.value\n                    ? 'border-blue-500 bg-blue-500/20 text-blue-400'\n                    : 'border-slate-600 bg-slate-700/30 text-slate-300 hover:border-slate-500 hover:bg-slate-700/50'\n                }`}\n              >\n                <div className=\"font-medium text-sm\">{type.label}</div>\n                <div className=\"text-xs text-slate-400 mt-1\">{type.description}</div>\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Content */}\n        <div>\n          <label className=\"block text-sm font-medium mb-3 text-slate-300\">Content</label>\n          <textarea\n            value={content}\n            onChange={(e) => setContent(e.target.value)}\n            rows={12}\n            className=\"w-full p-4 bg-slate-700/50 border border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-white placeholder-slate-400 transition-all duration-200 resize-none\"\n            placeholder=\"Write your note content...\"\n          />\n        </div>\n\n        {/* Tags */}\n        <div>\n          <label className=\"block text-sm font-medium mb-3 text-slate-300\">Tags</label>\n          <input\n            type=\"text\"\n            value={tagsInput}\n            onChange={(e) => setTagsInput(e.target.value)}\n            className=\"w-full p-4 bg-slate-700/50 border border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-white placeholder-slate-400 transition-all duration-200\"\n            placeholder=\"Enter tags separated by commas (e.g. dragon, combat, important)\"\n          />\n          <p className=\"text-xs text-slate-400 mt-2\">\n            Separate multiple tags with commas\n          </p>\n        </div>\n\n        {/* References Section */}\n        <div>\n          <div className=\"flex justify-between items-center mb-3\">\n            <label className=\"text-sm font-medium text-slate-300\">References</label>\n            <button\n              type=\"button\"\n              onClick={() => setShowReferenceModal(true)}\n              className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors duration-200 flex items-center space-x-2\"\n            >\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n              </svg>\n              <span>Add Reference</span>\n            </button>\n          </div>\n\n          {pendingReferences.length > 0 ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n              {pendingReferences.map((refId) => {\n                // For existing notes, we have the reference data\n                const existingRef = initialData?.references_from?.find(ref => ref.target_note_id === refId)\n                \n                return (\n                  <div\n                    key={refId}\n                    className=\"bg-slate-700/30 border border-slate-600 rounded-lg p-3 flex items-center justify-between group\"\n                  >\n                    <div className=\"flex items-center space-x-2\">\n                      {existingRef ? (\n                        <>\n                          <span className=\"text-lg\">\n                            {NOTE_TYPE_ICONS[existingRef.target_note.note_type]}\n                          </span>\n                          <div>\n                            <p className=\"text-white font-medium text-sm\">{existingRef.target_note.title}</p>\n                            <p className=\"text-slate-400 text-xs capitalize\">{existingRef.target_note.note_type}</p>\n                          </div>\n                        </>\n                      ) : (\n                        <div>\n                          <p className=\"text-white font-medium text-sm\">Referenced Note</p>\n                          <p className=\"text-slate-400 text-xs\">Will be linked when saved</p>\n                        </div>\n                      )}\n                    </div>\n                    <button\n                      type=\"button\"\n                      onClick={() => handleRemoveReference(refId)}\n                      className=\"opacity-0 group-hover:opacity-100 p-1 text-slate-400 hover:text-red-400 transition-all duration-200\"\n                    >\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                      </svg>\n                    </button>\n                  </div>\n                )\n              })}\n            </div>\n          ) : (\n            <div className=\"text-slate-400 text-sm bg-slate-700/20 border border-slate-600 rounded-lg p-4 text-center\">\n              No references added yet. Click \"Add Reference\" to link this note to other notes.\n            </div>\n          )}\n        </div>\n\n        {/* Buttons */}\n        <div className=\"flex space-x-4 pt-4\">\n          <button\n            type=\"submit\"\n            disabled={isLoading || !title.trim()}\n            className=\"flex-1 bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white p-4 rounded-lg font-medium disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-105 disabled:transform-none\"\n          >\n            {isLoading ? 'Saving...' : (initialData ? 'Update Note' : 'Create Note')}\n          </button>\n          <button\n            type=\"button\"\n            onClick={onCancel}\n            className=\"flex-1 bg-slate-600 hover:bg-slate-500 text-white p-4 rounded-lg font-medium transition-all duration-200\"\n          >\n            Cancel\n          </button>\n        </div>\n      </form>\n\n      {/* Reference Modal */}\n      <ReferenceModal\n        isOpen={showReferenceModal}\n        currentNoteId={initialData?.id || ''}\n        existingReferences={pendingReferences}\n        onAddReference={handleAddReference}\n        onClose={() => setShowReferenceModal(false)}\n      />\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1163, "column": 0}, "map": {"version":3,"sources":["file:///Users/Josip/Documents/dnd-notes-app/components/notes/NotesList.tsx"],"sourcesContent":["'use client'\n\nimport { Note } from '@/lib/database.types'\nimport { formatDistanceToNow } from 'date-fns'\n\ninterface NotesListProps {\n  notes: Note[]\n  allNotes: Note[]\n  onSelectNote: (note: Note) => void\n  onEditNote: (note: Note) => void\n  onDeleteNote: (note: Note) => void\n  onCreateNote: () => void\n  searchQuery?: string\n  isFiltered?: boolean\n}\n\nconst NOTE_TYPE_ICONS = {\n  general: '📝',\n  npc: '🧙‍♂️',\n  location: '🏰',\n  quest: '⚔️',\n  session: '🎲',\n  item: '⚡',\n  lore: '📚'\n}\n\nexport default function NotesList({ \n  notes, \n  allNotes, \n  onSelectNote, \n  onEditNote, \n  onDeleteNote, \n  onCreateNote,\n  searchQuery,\n  isFiltered \n}: NotesListProps) {\n  const highlightText = (text: string, query: string) => {\n    if (!query.trim()) return text\n    \n    const regex = new RegExp(`(${query.trim()})`, 'gi')\n    const parts = text.split(regex)\n    \n    return parts.map((part, index) =>\n      regex.test(part) ? (\n        <mark key={index} className=\"bg-yellow-400/30 text-yellow-300 rounded px-1\">\n          {part}\n        </mark>\n      ) : (\n        part\n      )\n    )\n  }\n\n  return (\n    <div className=\"bg-slate-800/90 backdrop-blur-sm rounded-xl shadow-2xl border border-slate-700\">\n      <div className=\"p-6 border-b border-slate-700 flex justify-between items-center\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-white\">Your Campaign Notes</h2>\n          {isFiltered && (\n            <p className=\"text-slate-400 text-sm mt-1\">\n              Showing {notes.length} of {allNotes.length} notes\n              {searchQuery && ` for \"${searchQuery}\"`}\n            </p>\n          )}\n        </div>\n        <button\n          onClick={onCreateNote}\n          className=\"bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white px-6 py-3 rounded-lg font-medium flex items-center space-x-2 transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-105\"\n        >\n          <span className=\"text-lg\">+</span>\n          <span>New Note</span>\n        </button>\n      </div>\n\n      <div className=\"divide-y divide-slate-700\">\n        {notes.length === 0 ? (\n          <div className=\"p-12 text-center text-slate-400\">\n            {allNotes.length === 0 ? (\n              <>\n                <div className=\"text-6xl mb-6\">📝</div>\n                <h3 className=\"text-xl font-medium mb-3 text-slate-300\">No notes yet</h3>\n                <p className=\"text-slate-400\">Create your first note to start building your campaign!</p>\n              </>\n            ) : (\n              <>\n                <div className=\"text-6xl mb-6\">🔍</div>\n                <h3 className=\"text-xl font-medium mb-3 text-slate-300\">No notes found</h3>\n                <p className=\"text-slate-400\">\n                  {searchQuery \n                    ? `No notes match \"${searchQuery}\". Try different keywords.`\n                    : \"No notes match your current filters. Try adjusting your selection.\"\n                  }\n                </p>\n              </>\n            )}\n          </div>\n        ) : (\n          notes.map((note) => (\n            <div\n              key={note.id}\n              className=\"p-6 hover:bg-slate-700/50 transition-all duration-200 group\"\n            >\n              <div className=\"flex items-start justify-between\">\n                <div className=\"flex-1 cursor-pointer\" onClick={() => onSelectNote(note)}>\n                  <div className=\"flex items-center space-x-3 mb-2\">\n                    <span className=\"text-2xl\">\n                      {NOTE_TYPE_ICONS[note.note_type] || '📝'}\n                    </span>\n                    <h3 className=\"font-semibold text-white text-lg truncate\">\n                      {searchQuery ? highlightText(note.title, searchQuery) : note.title}\n                    </h3>\n                    <span className=\"text-xs px-3 py-1 rounded-full bg-green-500/20 text-green-400 border border-green-500/30 font-medium\">\n                      owner\n                    </span>\n                  </div>\n                  <p className=\"text-slate-300 truncate mb-3 ml-11\">\n                    {note.content \n                      ? (searchQuery ? highlightText(note.content, searchQuery) : note.content)\n                      : 'No content'\n                    }\n                  </p>\n                  <div className=\"flex items-center space-x-6 text-sm text-slate-400 ml-11\">\n                    <span className=\"flex items-center space-x-1\">\n                      <span>🕒</span>\n                      <span>{formatDistanceToNow(new Date(note.updated_at), { addSuffix: true })}</span>\n                    </span>\n                    {note.tags && note.tags.length > 0 && (\n                      <div className=\"flex space-x-2\">\n                        {note.tags.slice(0, 3).map((tag, index) => (\n                          <span\n                            key={index}\n                            className=\"bg-slate-600/50 text-slate-300 px-3 py-1 rounded-full text-xs border border-slate-600\"\n                          >\n                            {searchQuery ? highlightText(tag, searchQuery) : tag}\n                          </span>\n                        ))}\n                        {note.tags.length > 3 && (\n                          <span className=\"text-slate-500\">+{note.tags.length - 3} more</span>\n                        )}\n                      </div>\n                    )}\n                  </div>\n                </div>\n                \n                {/* Action Buttons */}\n                <div className=\"flex items-center space-x-2 ml-4 opacity-0 group-hover:opacity-100 transition-opacity duration-200\">\n                  <button\n                    onClick={(e) => {\n                      e.stopPropagation()\n                      onEditNote(note)\n                    }}\n                    className=\"p-2 text-slate-400 hover:text-blue-400 hover:bg-blue-500/20 rounded-lg transition-colors duration-200\"\n                    title=\"Edit note\"\n                  >\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                    </svg>\n                  </button>\n                  <button\n                    onClick={(e) => {\n                      e.stopPropagation()\n                      onDeleteNote(note)\n                    }}\n                    className=\"p-2 text-slate-400 hover:text-red-400 hover:bg-red-500/20 rounded-lg transition-colors duration-200\"\n                    title=\"Delete note\"\n                  >\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                    </svg>\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1552, "column": 0}, "map": {"version":3,"sources":["file:///Users/Josip/Documents/dnd-notes-app/components/notes/SearchAndFilter.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { Note } from '@/lib/database.types'\n\ninterface SearchAndFilterProps {\n  onSearch: (query: string) => void\n  onFilterType: (type: Note['note_type'] | 'all') => void\n  onFilterTag: (tag: string) => void\n  searchQuery: string\n  selectedType: Note['note_type'] | 'all'\n  availableTags: string[]\n  selectedTag: string\n}\n\nconst NOTE_TYPES = [\n  { value: 'all', label: '🔍 All Types', icon: '🔍' },\n  { value: 'general', label: '📝 General', icon: '📝' },\n  { value: 'npc', label: '🧙‍♂️ NPCs', icon: '🧙‍♂️' },\n  { value: 'location', label: '🏰 Locations', icon: '🏰' },\n  { value: 'quest', label: '⚔️ Quests', icon: '⚔️' },\n  { value: 'session', label: '🎲 Sessions', icon: '🎲' },\n  { value: 'item', label: '⚡ Items', icon: '⚡' },\n  { value: 'lore', label: '📚 Lore', icon: '📚' }\n] as const\n\nexport default function SearchAndFilter({\n  onSearch,\n  onFilterType,\n  onFilterTag,\n  searchQuery,\n  selectedType,\n  availableTags = [], // Default to empty array\n  selectedTag\n}: SearchAndFilterProps) {\n  const [showFilters, setShowFilters] = useState(false)\n\n  return (\n    <div className=\"bg-slate-800/90 backdrop-blur-sm rounded-xl shadow-2xl border border-slate-700 p-6 mb-6\">\n      {/* Search Bar */}\n      <div className=\"relative mb-4\">\n        <div className=\"absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none\">\n          <svg className=\"h-5 w-5 text-slate-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\n          </svg>\n        </div>\n        <input\n          type=\"text\"\n          value={searchQuery}\n          onChange={(e) => onSearch(e.target.value)}\n          placeholder=\"Search your campaign notes...\"\n          className=\"w-full pl-12 pr-4 py-3 bg-slate-700/50 border border-slate-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-white placeholder-slate-400 transition-all duration-200\"\n        />\n      </div>\n\n      {/* Filter Toggle */}\n      <div className=\"flex justify-between items-center\">\n        <button\n          onClick={() => setShowFilters(!showFilters)}\n          className=\"flex items-center space-x-2 text-slate-300 hover:text-white transition-colors duration-200\"\n        >\n          <svg className={`w-4 h-4 transition-transform duration-200 ${showFilters ? 'rotate-180' : ''}`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n          </svg>\n          <span>Filters</span>\n        </button>\n\n        {/* Active Filters Count */}\n        {(selectedType !== 'all' || selectedTag !== 'all') && (\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-xs bg-blue-500/20 text-blue-400 px-2 py-1 rounded-full border border-blue-500/30\">\n              {selectedType !== 'all' && selectedTag !== 'all' ? '2 filters active' :\n               selectedType !== 'all' ? 'Type filter' : 'Tag filter'}\n            </span>\n            <button\n              onClick={() => {\n                onFilterType('all')\n                onFilterTag('all')\n              }}\n              className=\"text-xs text-slate-400 hover:text-slate-300 underline\"\n            >\n              Clear all\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Filter Options */}\n      {showFilters && (\n        <div className=\"mt-6 space-y-6 border-t border-slate-700 pt-6\">\n          {/* Note Type Filter */}\n          <div>\n            <h3 className=\"text-sm font-medium text-slate-300 mb-3\">Filter by Type</h3>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2\">\n              {NOTE_TYPES.map((type) => (\n                <button\n                  key={type.value}\n                  onClick={() => onFilterType(type.value as Note['note_type'] | 'all')}\n                  className={`p-3 text-left border rounded-lg transition-all duration-200 flex items-center space-x-2 ${\n                    selectedType === type.value\n                      ? 'border-blue-500 bg-blue-500/20 text-blue-400'\n                      : 'border-slate-600 bg-slate-700/30 text-slate-300 hover:border-slate-500 hover:bg-slate-700/50'\n                  }`}\n                >\n                  <span>{type.icon}</span>\n                  <span className=\"text-sm font-medium truncate\">{type.label}</span>\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* Tag Filter */}\n          {availableTags && availableTags.length > 0 && (\n            <div>\n              <h3 className=\"text-sm font-medium text-slate-300 mb-3\">Filter by Tag</h3>\n              <div className=\"flex flex-wrap gap-2\">\n                <button\n                  onClick={() => onFilterTag('all')}\n                  className={`px-3 py-2 text-sm rounded-lg transition-all duration-200 ${\n                    selectedTag === 'all'\n                      ? 'bg-blue-500/20 text-blue-400 border border-blue-500/30'\n                      : 'bg-slate-700/50 text-slate-300 border border-slate-600 hover:border-slate-500'\n                  }`}\n                >\n                  All Tags\n                </button>\n                {availableTags.map((tag) => (\n                  <button\n                    key={tag}\n                    onClick={() => onFilterTag(tag)}\n                    className={`px-3 py-2 text-sm rounded-lg transition-all duration-200 ${\n                      selectedTag === tag\n                        ? 'bg-blue-500/20 text-blue-400 border border-blue-500/30'\n                        : 'bg-slate-700/50 text-slate-300 border border-slate-600 hover:border-slate-500'\n                    }`}\n                  >\n                    {tag}\n                  </button>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1851, "column": 0}, "map": {"version":3,"sources":["file:///Users/Josip/Documents/dnd-notes-app/components/notes/DeleteConfirmModal.tsx"],"sourcesContent":["'use client'\n\ninterface DeleteConfirmModalProps {\n  isOpen: boolean\n  noteTitle: string\n  onConfirm: () => void\n  onCancel: () => void\n  isDeleting: boolean\n}\n\nexport default function DeleteConfirmModal({ \n  isOpen, \n  noteTitle, \n  onConfirm, \n  onCancel, \n  isDeleting \n}: DeleteConfirmModalProps) {\n  if (!isOpen) return null\n\n  return (\n    <div className=\"fixed inset-0 bg-black/80 backdrop-blur-sm flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-slate-800 rounded-xl border border-slate-700 p-6 max-w-md w-full shadow-2xl\">\n        <div className=\"flex items-center space-x-3 mb-4\">\n          <div className=\"text-3xl\">⚠️</div>\n          <h3 className=\"text-xl font-bold text-white\">Delete Note: 'noteTitle'</h3>\n        </div>\n        \n        <p className=\"text-slate-300 mb-2\">\n          Are you sure you want to delete this note?\n        </p>\n        \n        <p className=\"text-slate-400 text-sm mb-6 bg-slate-700/50 p-3 rounded border-l-4 border-red-500\">\n          <strong className=\"text-slate-200\">\"{noteTitle}\"</strong><br />\n          This action cannot be undone.\n        </p>\n        \n        <div className=\"flex space-x-3\">\n          <button\n            onClick={onCancel}\n            disabled={isDeleting}\n            className=\"flex-1 bg-slate-600 hover:bg-slate-500 text-white p-3 rounded-lg font-medium transition-colors duration-200 disabled:opacity-50\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={onConfirm}\n            disabled={isDeleting}\n            className=\"flex-1 bg-red-600 hover:bg-red-700 text-white p-3 rounded-lg font-medium transition-colors duration-200 disabled:opacity-50\"\n          >\n            {isDeleting ? 'Deleting...' : 'Delete Note'}\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AAAA;;AAUe,SAAS,mBAAmB,EACzC,MAAM,EACN,SAAS,EACT,SAAS,EACT,QAAQ,EACR,UAAU,EACc;IACxB,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;sCAAW;;;;;;sCAC1B,6LAAC;4BAAG,WAAU;sCAA+B;;;;;;;;;;;;8BAG/C,6LAAC;oBAAE,WAAU;8BAAsB;;;;;;8BAInC,6LAAC;oBAAE,WAAU;;sCACX,6LAAC;4BAAO,WAAU;;gCAAiB;gCAAE;gCAAU;;;;;;;sCAAU,6LAAC;;;;;wBAAK;;;;;;;8BAIjE,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BACC,SAAS;4BACT,UAAU;4BACV,WAAU;sCACX;;;;;;sCAGD,6LAAC;4BACC,SAAS;4BACT,UAAU;4BACV,WAAU;sCAET,aAAa,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;AAM1C;KA7CwB","debugId":null}},
    {"offset": {"line": 1977, "column": 0}, "map": {"version":3,"sources":["file:///Users/Josip/Documents/dnd-notes-app/components/notes/NoteReferences.tsx"],"sourcesContent":["'use client'\n\nimport { NoteWithReferences } from '@/lib/database.types'\n\ninterface NoteReferencesProps {\n  note: NoteWithReferences\n  onNavigateToNote: (noteId: string) => void\n  onRemoveReference: (targetNoteId: string) => void\n  canEdit: boolean\n}\n\nconst NOTE_TYPE_ICONS = {\n  general: '📝',\n  npc: '🧙‍♂️',\n  location: '🏰',\n  quest: '⚔️',\n  session: '🎲',\n  item: '⚡',\n  lore: '📚'\n}\n\nexport default function NoteReferences({ \n  note, \n  onNavigateToNote, \n  onRemoveReference, \n  canEdit \n}: NoteReferencesProps) {\n  const referencesFrom = note.references_from || []\n  const referencesTo = note.references_to || []\n\n  if (referencesFrom.length === 0 && referencesTo.length === 0) {\n    return null\n  }\n\n  return (\n    <div className=\"mt-8 space-y-6\">\n      {/* References FROM this note (links this note points to) */}\n      {referencesFrom.length > 0 && (\n        <div>\n          <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center space-x-2\">\n            <span>🔗</span>\n            <span>References</span>\n          </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n            {referencesFrom.map((ref) => (\n              <div\n                key={ref.target_note_id}\n                className=\"group bg-slate-700/30 border border-slate-600 rounded-lg p-4 hover:bg-slate-700/50 transition-all duration-200\"\n              >\n                <div className=\"flex items-center justify-between\">\n                  <button\n                    onClick={() => onNavigateToNote(ref.target_note.id)}\n                    className=\"flex items-center space-x-3 flex-1 text-left hover:text-blue-400 transition-colors\"\n                  >\n                    <span className=\"text-xl\">\n                      {NOTE_TYPE_ICONS[ref.target_note.note_type]}\n                    </span>\n                    <div>\n                      <h4 className=\"font-medium text-white group-hover:text-blue-400 transition-colors\">\n                        {ref.target_note.title}\n                      </h4>\n                      <p className=\"text-sm text-slate-400 capitalize\">\n                        {ref.target_note.note_type}\n                      </p>\n                    </div>\n                  </button>\n                  {canEdit && (\n                    <button\n                      onClick={() => onRemoveReference(ref.target_note_id)}\n                      className=\"opacity-0 group-hover:opacity-100 p-2 text-slate-400 hover:text-red-400 hover:bg-red-500/20 rounded-lg transition-all duration-200\"\n                      title=\"Remove reference\"\n                    >\n                      <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                      </svg>\n                    </button>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* References TO this note (notes that link to this one) */}\n      {referencesTo.length > 0 && (\n        <div>\n          <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center space-x-2\">\n            <span>🔄</span>\n            <span>Referenced by</span>\n          </h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n            {referencesTo.map((ref) => (\n              <button\n                key={ref.source_note_id}\n                onClick={() => onNavigateToNote(ref.source_note.id)}\n                className=\"bg-slate-700/30 border border-slate-600 rounded-lg p-4 hover:bg-slate-700/50 transition-all duration-200 text-left group\"\n              >\n                <div className=\"flex items-center space-x-3\">\n                  <span className=\"text-xl\">\n                    {NOTE_TYPE_ICONS[ref.source_note.note_type]}\n                  </span>\n                  <div>\n                    <h4 className=\"font-medium text-white group-hover:text-blue-400 transition-colors\">\n                      {ref.source_note.title}\n                    </h4>\n                    <p className=\"text-sm text-slate-400 capitalize\">\n                      {ref.source_note.note_type}\n                    </p>\n                  </div>\n                </div>\n              </button>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}"],"names":[],"mappings":";;;;AAAA;;AAWA,MAAM,kBAAkB;IACtB,SAAS;IACT,KAAK;IACL,UAAU;IACV,OAAO;IACP,SAAS;IACT,MAAM;IACN,MAAM;AACR;AAEe,SAAS,eAAe,EACrC,IAAI,EACJ,gBAAgB,EAChB,iBAAiB,EACjB,OAAO,EACa;IACpB,MAAM,iBAAiB,KAAK,eAAe,IAAI,EAAE;IACjD,MAAM,eAAe,KAAK,aAAa,IAAI,EAAE;IAE7C,IAAI,eAAe,MAAM,KAAK,KAAK,aAAa,MAAM,KAAK,GAAG;QAC5D,OAAO;IACT;IAEA,qBACE,6LAAC;QAAI,WAAU;;YAEZ,eAAe,MAAM,GAAG,mBACvB,6LAAC;;kCACC,6LAAC;wBAAG,WAAU;;0CACZ,6LAAC;0CAAK;;;;;;0CACN,6LAAC;0CAAK;;;;;;;;;;;;kCAER,6LAAC;wBAAI,WAAU;kCACZ,eAAe,GAAG,CAAC,CAAC,oBACnB,6LAAC;gCAEC,WAAU;0CAEV,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CACC,SAAS,IAAM,iBAAiB,IAAI,WAAW,CAAC,EAAE;4CAClD,WAAU;;8DAEV,6LAAC;oDAAK,WAAU;8DACb,eAAe,CAAC,IAAI,WAAW,CAAC,SAAS,CAAC;;;;;;8DAE7C,6LAAC;;sEACC,6LAAC;4DAAG,WAAU;sEACX,IAAI,WAAW,CAAC,KAAK;;;;;;sEAExB,6LAAC;4DAAE,WAAU;sEACV,IAAI,WAAW,CAAC,SAAS;;;;;;;;;;;;;;;;;;wCAI/B,yBACC,6LAAC;4CACC,SAAS,IAAM,kBAAkB,IAAI,cAAc;4CACnD,WAAU;4CACV,OAAM;sDAEN,cAAA,6LAAC;gDAAI,WAAU;gDAAU,MAAK;gDAAO,QAAO;gDAAe,SAAQ;0DACjE,cAAA,6LAAC;oDAAK,eAAc;oDAAQ,gBAAe;oDAAQ,aAAa;oDAAG,GAAE;;;;;;;;;;;;;;;;;;;;;;+BA3BxE,IAAI,cAAc;;;;;;;;;;;;;;;;YAuChC,aAAa,MAAM,GAAG,mBACrB,6LAAC;;kCACC,6LAAC;wBAAG,WAAU;;0CACZ,6LAAC;0CAAK;;;;;;0CACN,6LAAC;0CAAK;;;;;;;;;;;;kCAER,6LAAC;wBAAI,WAAU;kCACZ,aAAa,GAAG,CAAC,CAAC,oBACjB,6LAAC;gCAEC,SAAS,IAAM,iBAAiB,IAAI,WAAW,CAAC,EAAE;gCAClD,WAAU;0CAEV,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAK,WAAU;sDACb,eAAe,CAAC,IAAI,WAAW,CAAC,SAAS,CAAC;;;;;;sDAE7C,6LAAC;;8DACC,6LAAC;oDAAG,WAAU;8DACX,IAAI,WAAW,CAAC,KAAK;;;;;;8DAExB,6LAAC;oDAAE,WAAU;8DACV,IAAI,WAAW,CAAC,SAAS;;;;;;;;;;;;;;;;;;+BAb3B,IAAI,cAAc;;;;;;;;;;;;;;;;;;;;;;AAwBvC;KAjGwB","debugId":null}},
    {"offset": {"line": 2232, "column": 0}, "map": {"version":3,"sources":["file:///Users/Josip/Documents/dnd-notes-app/src/app/page.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState, useMemo } from 'react'\nimport { User } from '@supabase/supabase-js'\nimport { supabase } from 'lib/supabase'\nimport { Note, NoteWithReferences } from 'lib/database.types'\nimport { \n  createNote, \n  getNotes, \n  updateNote, \n  deleteNote, \n  getNote,\n  addNoteReference,\n  removeNoteReference\n} from 'lib/notes'\nimport { searchAndFilterNotes, getAvailableTags, SearchFilters } from 'lib/search'\nimport LoginForm from 'components/auth/LoginForm'\nimport NoteForm from 'components/notes/NoteForm'\nimport NotesList from 'components/notes/NotesList'\nimport SearchAndFilter from 'components/notes/SearchAndFilter'\nimport DeleteConfirmModal from 'components/notes/DeleteConfirmModal'\nimport NoteReferences from 'components/notes/NoteReferences'\n\nexport default function Home() {\n  const [user, setUser] = useState<User | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [allNotes, setAllNotes] = useState<Note[]>([])\n  const [selectedNote, setSelectedNote] = useState<NoteWithReferences | null>(null)\n  const [editingNote, setEditingNote] = useState<NoteWithReferences | null>(null)\n  const [showCreateForm, setShowCreateForm] = useState(false)\n  const [isCreating, setIsCreating] = useState(false)\n  const [isUpdating, setIsUpdating] = useState(false)\n  const [showDeleteModal, setShowDeleteModal] = useState(false)\n  const [noteToDelete, setNoteToDelete] = useState<Note | null>(null)\n  const [isDeleting, setIsDeleting] = useState(false)\n\n  // Search and filter state\n  const [searchFilters, setSearchFilters] = useState<SearchFilters>({\n    query: '',\n    type: 'all',\n    tag: 'all'\n  })\n\n  // Computed values with safe defaults\n  const filteredNotes = useMemo(() => {\n    if (!allNotes || allNotes.length === 0) return []\n    return searchAndFilterNotes(allNotes, searchFilters)\n  }, [allNotes, searchFilters])\n\n  const availableTags = useMemo(() => {\n    if (!allNotes || allNotes.length === 0) return []\n    return getAvailableTags(allNotes)\n  }, [allNotes])\n\n  const isFiltered = searchFilters.query !== '' || searchFilters.type !== 'all' || searchFilters.tag !== 'all'\n\n  useEffect(() => {\n    const checkUser = async () => {\n      const { data: { session } } = await supabase.auth.getSession()\n      setUser(session?.user ?? null)\n      setLoading(false)\n    }\n\n    checkUser()\n\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(\n      (_event, session) => {\n        setUser(session?.user ?? null)\n      }\n    )\n\n    return () => subscription.unsubscribe()\n  }, [])\n\n  useEffect(() => {\n    if (user) {\n      loadNotes()\n    }\n  }, [user])\n\n  const loadNotes = async () => {\n    try {\n      const notesData = await getNotes()\n      setAllNotes(notesData || [])\n    } catch (error) {\n      console.error('Error loading notes:', error)\n      setAllNotes([])\n    }\n  }\n\n  const loadNoteWithReferences = async (noteId: string) => {\n    try {\n      const noteData = await getNote(noteId)\n      return noteData\n    } catch (error) {\n      console.error('Error loading note with references:', error)\n      return null\n    }\n  }\n\n  const handleSelectNote = async (note: Note) => {\n    const noteWithRefs = await loadNoteWithReferences(note.id)\n    if (noteWithRefs) {\n      setSelectedNote(noteWithRefs)\n    }\n  }\n\n  const handleCreateNote = async (noteData: {\n    title: string\n    content: string\n    note_type: Note['note_type']\n    tags: string[]\n    references?: string[]\n  }) => {\n    setIsCreating(true)\n    try {\n      const newNote = await createNote(noteData)\n      \n      // Add references if any\n      if (noteData.references && noteData.references.length > 0) {\n        for (const targetId of noteData.references) {\n          try {\n            await addNoteReference(newNote.id, targetId)\n          } catch (error) {\n            console.error('Error adding reference:', error)\n          }\n        }\n      }\n      \n      await loadNotes()\n      setShowCreateForm(false)\n    } catch (error) {\n      console.error('Error creating note:', error)\n      alert('Failed to create note. Please try again.')\n    } finally {\n      setIsCreating(false)\n    }\n  }\n\n  const handleEditNote = async (note: Note) => {\n    const noteWithRefs = await loadNoteWithReferences(note.id)\n    if (noteWithRefs) {\n      setEditingNote(noteWithRefs)\n      setSelectedNote(null)\n      setShowCreateForm(false)\n    }\n  }\n\n  const handleUpdateNote = async (noteData: {\n    title: string\n    content: string\n    note_type: Note['note_type']\n    tags: string[]\n    references?: string[]\n  }) => {\n    if (!editingNote) return\n\n    setIsUpdating(true)\n    try {\n      await updateNote(editingNote.id, noteData)\n      \n      // Handle reference updates\n      if (noteData.references) {\n        const existingRefs = editingNote.references_from?.map(ref => ref.target_note_id) || []\n        const newRefs = noteData.references\n\n        // Remove old references\n        for (const oldRef of existingRefs) {\n          if (!newRefs.includes(oldRef)) {\n            try {\n              await removeNoteReference(editingNote.id, oldRef)\n            } catch (error) {\n              console.error('Error removing reference:', error)\n            }\n          }\n        }\n\n        // Add new references\n        for (const newRef of newRefs) {\n          if (!existingRefs.includes(newRef)) {\n            try {\n              await addNoteReference(editingNote.id, newRef)\n            } catch (error) {\n              console.error('Error adding reference:', error)\n            }\n          }\n        }\n      }\n      \n      await loadNotes()\n      setEditingNote(null)\n    } catch (error) {\n      console.error('Error updating note:', error)\n      alert('Failed to update note. Please try again.')\n    } finally {\n      setIsUpdating(false)\n    }\n  }\n\n  const handleDeleteNote = (note: Note) => {\n    setNoteToDelete(note)\n    setShowDeleteModal(true)\n  }\n\n  const confirmDeleteNote = async () => {\n    if (!noteToDelete) return\n\n    setIsDeleting(true)\n    try {\n      await deleteNote(noteToDelete.id)\n      await loadNotes()\n      setShowDeleteModal(false)\n      setNoteToDelete(null)\n      if (selectedNote?.id === noteToDelete.id) {\n        setSelectedNote(null)\n      }\n    } catch (error) {\n      console.error('Error deleting note:', error)\n      alert('Failed to delete note. Please try again.')\n    } finally {\n      setIsDeleting(false)\n    }\n  }\n\n  const handleNavigateToNote = async (noteId: string) => {\n    const noteWithRefs = await loadNoteWithReferences(noteId)\n    if (noteWithRefs) {\n      setSelectedNote(noteWithRefs)\n    }\n  }\n\n  const handleRemoveReference = async (targetNoteId: string) => {\n    if (!selectedNote) return\n\n    try {\n      await removeNoteReference(selectedNote.id, targetNoteId)\n      // Reload the current note to update references\n      const updatedNote = await loadNoteWithReferences(selectedNote.id)\n      if (updatedNote) {\n        setSelectedNote(updatedNote)\n      }\n    } catch (error) {\n      console.error('Error removing reference:', error)\n      alert('Failed to remove reference. Please try again.')\n    }\n  }\n\n  const handleSearch = (query: string) => {\n    setSearchFilters(prev => ({ ...prev, query }))\n  }\n\n  const handleFilterType = (type: Note['note_type'] | 'all') => {\n    setSearchFilters(prev => ({ ...prev, type }))\n  }\n\n  const handleFilterTag = (tag: string) => {\n    setSearchFilters(prev => ({ ...prev, tag }))\n  }\n\n  const handleLogout = async () => {\n    await supabase.auth.signOut()\n  }\n\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900\">\n        <div className=\"text-white\">Loading...</div>\n      </div>\n    )\n  }\n\n  if (!user) {\n    return (\n      <div className=\"min-h-screen bg-gray-100 py-8\">\n        <LoginForm />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900\">\n      {/* Header */}\n      <div className=\"bg-slate-800/90 backdrop-blur-sm border-b border-slate-700 shadow-xl\">\n        <div className=\"max-w-6xl mx-auto px-4 py-6\">\n          <div className=\"flex justify-between items-center\">\n            <h1 className=\"text-3xl font-bold text-white\">🎲 D&D Campaign Notes</h1>\n            <div className=\"flex items-center space-x-4\">\n              <span className=\"text-slate-300\">Welcome, {user.email}</span>\n              <button\n                onClick={handleLogout}\n                className=\"bg-red-600 hover:bg-red-700 text-white px-6 py-2 rounded-lg font-medium transition-all duration-200 shadow-lg hover:shadow-xl\"\n              >\n                Logout\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-6xl mx-auto px-4 py-8\">\n        {showCreateForm ? (\n          <NoteForm\n            onSubmit={handleCreateNote}\n            onCancel={() => setShowCreateForm(false)}\n            isLoading={isCreating}\n          />\n        ) : editingNote ? (\n          <NoteForm\n            onSubmit={handleUpdateNote}\n            onCancel={() => setEditingNote(null)}\n            initialData={editingNote}\n            isLoading={isUpdating}\n          />\n        ) : selectedNote ? (\n          <div className=\"bg-slate-800/90 backdrop-blur-sm rounded-xl shadow-2xl p-8 border border-slate-700\">\n            <div className=\"flex justify-between items-start mb-6\">\n              <button\n                onClick={() => setSelectedNote(null)}\n                className=\"text-blue-400 hover:text-blue-300 font-medium transition-colors duration-200\"\n              >\n                ← Back to notes\n              </button>\n              <div className=\"flex space-x-2\">\n                <button\n                  onClick={() => handleEditNote(selectedNote)}\n                  className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium transition-colors duration-200 flex items-center space-x-2\"\n                >\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                  </svg>\n                  <span>Edit</span>\n                </button>\n                <button\n                  onClick={() => handleDeleteNote(selectedNote)}\n                  className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg font-medium transition-colors duration-200 flex items-center space-x-2\"\n                >\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                  </svg>\n                  <span>Delete</span>\n                </button>\n              </div>\n            </div>\n            \n            <h1 className=\"text-3xl font-bold mb-6 text-white\">{selectedNote.title}</h1>\n            \n            <div className=\"prose prose-invert max-w-none mb-8\">\n              <pre className=\"whitespace-pre-wrap font-sans text-slate-200 leading-relaxed\">\n                {selectedNote.content}\n              </pre>\n            </div>\n\n            {/* Note References */}\n            <NoteReferences\n              note={selectedNote}\n              onNavigateToNote={handleNavigateToNote}\n              onRemoveReference={handleRemoveReference}\n              canEdit={true}\n            />\n          </div>\n        ) : (\n          <>\n            {/* Search and Filter */}\n            <SearchAndFilter\n              onSearch={handleSearch}\n              onFilterType={handleFilterType}\n              onFilterTag={handleFilterTag}\n              searchQuery={searchFilters.query}\n              selectedType={searchFilters.type}\n              availableTags={availableTags}\n             selectedTag={searchFilters.tag}\n           />\n\n           {/* Notes List */}\n           <NotesList\n             notes={filteredNotes}\n             allNotes={allNotes}\n             onSelectNote={handleSelectNote}\n             onEditNote={handleEditNote}\n             onDeleteNote={handleDeleteNote}\n             onCreateNote={() => setShowCreateForm(true)}\n             searchQuery={searchFilters.query}\n             isFiltered={isFiltered}\n           />\n         </>\n       )}\n     </div>\n\n     {/* Delete Confirmation Modal */}\n     <DeleteConfirmModal\n       isOpen={showDeleteModal}\n       noteTitle={noteToDelete?.title || ''}\n       onConfirm={confirmDeleteNote}\n       onCancel={() => {\n         setShowDeleteModal(false)\n         setNoteToDelete(null)\n       }}\n       isDeleting={isDeleting}\n     />\n   </div>\n )\n}"],"names":[],"mappings":"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","debugId":null}}]
}